extends layout

block content
  a(href='/') ← Back
  h1 Upload
  .card
    form#upload-form(enctype='multipart/form-data')
      input(type='file', name='file', required)
      button(type='submit') Upload
      span#status
  .card
    .row
      div
        strong Uploads
        button#refresh(type='button') Refresh
      table
        thead
          tr
            th Filename
            th MIME
            th Size
            th Created
        tbody#tbody
  script.
    async function listUploads() {
      const res = await fetch('/api/upload/');
      const data = await res.json();
      const rows = data.items || [];
      const tbody = document.getElementById('tbody');
      tbody.innerHTML = rows.map(r => `<tr><td>${r.filename}</td><td>${r.mime}</td><td>${r.size}</td><td>${new Date(r.createdAt).toLocaleString()}</td></tr>`).join('');
    }
    document.getElementById('refresh').addEventListener('click', listUploads);
    document.getElementById('upload-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      const fd = new FormData(e.target);
      document.getElementById('status').textContent = 'Uploading…';
      try {
        const res = await fetch('/api/upload/', { method: 'POST', body: fd });
        if (!res.ok) throw new Error('Upload failed');
        await res.json();
        document.getElementById('status').textContent = 'Uploaded';
        await listUploads();
      } catch (err) {
        document.getElementById('status').textContent = '';
        alert(err.message || 'Error uploading');
      }
    });
    listUploads();